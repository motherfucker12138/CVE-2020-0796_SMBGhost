nt!ExInitializeLookasideListExInternal:
fffff802`788773c0 48895c2408      mov     qword ptr [rsp+8],rbx
fffff802`788773c5 48896c2410      mov     qword ptr [rsp+10h],rbp
fffff802`788773ca 4889742418      mov     qword ptr [rsp+18h],rsi
; 5+1 * 8 = 30h
fffff802`788773cf 57              push    rdi
fffff802`788773d0 4154            push    r12
fffff802`788773d2 4155            push    r13
fffff802`788773d4 4156            push    r14
fffff802`788773d6 4157            push    r15
fffff802`788773d8 4883ec30        sub     rsp,30h
; ebp -> 0x200
fffff802`788773dc 418be9          mov     ebp,r9d
; rbx -> allocated buffer
fffff802`788773df 488bd9          mov     rbx,rcx
; 98-30-30-> rsp+38 in caller -> 0
fffff802`788773e2 0fb78c2498000000 movzx   ecx,word ptr [rsp+98h]
; r9d -> 0
fffff802`788773ea 4533c9          xor     r9d,r9d
; r13 -> allocate function addr
fffff802`788773ed 4c8bea          mov     r13,rdx
; just drop rdx?????
; don't you want to call `srvnet!SrvNetBufferLookasideAllocate`?
; what the fuck?
; wait, rbp should still have the address, yes it is!
; I'm fucked, eyes not working, rdx is saved into r13......
; a0-60->40 in caller -> 0
fffff802`788773f0 8b9424a0000000  mov     edx,dword ptr [rsp+0A0h]
; r14 -> free fucntion addr
fffff802`788773f7 4d8bf0          mov     r14,r8
; ZF set
fffff802`788773fa 6685c9          test    cx,cx
; not taken
fffff802`788773fd 0f8589010000    jne     nt!ExInitializeLookasideListExInternal+0x1cc (fffff802`7887758c)  Branch

nt!ExInitializeLookasideListExInternal+0x43:
; ecx -> 0x100
fffff802`78877403 b900010000      mov     ecx,100h

nt!ExInitializeLookasideListExInternal+0x48:
; ZF set
fffff802`78877408 85d2            test    edx,edx
; r8 -> 8
fffff802`7887740a 41b808000000    mov     r8d,8
; 80-60 -> 20 in caller -> 0
fffff802`78877410 8b942480000000  mov     edx,dword ptr [rsp+80h]
; r15 -> 0
fffff802`78877417 458bf9          mov     r15d,r9d
; r15 -> 0x100
fffff802`7887741a 66440f44f9      cmove   r15w,cx
; eax -> 8
fffff802`7887741f 418bc0          mov     eax,r8d
; 88-60 -> rsp+28 in caller -> something calculated in caller's caller loop
; bigger than 8
; cmova taken
fffff802`78877422 4c39842488000000 cmp     qword ptr [rsp+88h],r8
; rax -> something calculated in caller's caller loop
fffff802`7887742a 480f47842488000000 cmova rax,qword ptr [rsp+88h]
; save into local var
fffff802`78877433 4889442420      mov     qword ptr [rsp+20h],rax
; eax would be 0xffffffff
fffff802`78877438 8d42ff          lea     eax,[rdx-1]
; ZF set
fffff802`7887743b 85c2            test    edx,eax
; cl -> 1, this won't clear other bits of rcx, only ecx operation clear rcx upper 32bit
; rcx |= 1 -> 101
fffff802`7887743d 0f94c1          sete    cl
; ZF set
fffff802`78877440 f7c2fcffffff    test    edx,0FFFFFFFCh
; al -> 1
; eax -> 0xffffffff
fffff802`78877446 0f94c0          sete    al
; ZF not set, je not take
fffff802`78877449 84c8            test    al,cl
fffff802`7887744b 0f846f551a00    je      nt!ExInitializeLookasideListExInternal+0x1a5600 (fffff802`78a1c9c0)  Branch

nt!ExInitializeLookasideListExInternal+0x91:
; jne not take
fffff802`78877451 f6c201          test    dl,1
fffff802`78877454 0f85ec541a00    jne     nt!ExInitializeLookasideListExInternal+0x1a5586 (fffff802`78a1c946)  Branch

nt!ExInitializeLookasideListExInternal+0x9a:
; ZF set
fffff802`7887745a 85d2            test    edx,edx
; esi -> 0
fffff802`7887745c 418bf1          mov     esi,r9d
; not taken
fffff802`7887745f 410f45f0        cmovne  esi,r8d

nt!ExInitializeLookasideListExInternal+0xa3:
; c&2=0, ZF set, jne not taken
fffff802`78877463 f7c518fcffff    test    ebp,0FFFFFC18h
fffff802`78877469 0f8547551a00    jne     nt!ExInitializeLookasideListExInternal+0x1a55f6 (fffff802`78a1c9b6)  Branch

nt!ExInitializeLookasideListExInternal+0xaf:
; eax -> 0x200
fffff802`7887746f 8bc5            mov     eax,ebp
; eax -> 0
fffff802`78877471 83e003          and     eax,3
; je not taken
fffff802`78877474 3c03            cmp     al,3
fffff802`78877476 0f843a551a00    je      nt!ExInitializeLookasideListExInternal+0x1a55f6 (fffff802`78a1c9b6)  Branch

nt!ExInitializeLookasideListExInternal+0xbc:
; eax -> 0x200
fffff802`7887747c 8bc5            mov     eax,ebp
fffff802`7887747e 488d0deb103d00  lea     rcx,[nt!ExPagedLookasideLock (fffff802`78c48570)]
; eax -> 0
fffff802`78877485 83e001          and     eax,1
fffff802`78877488 4c8d25c1103d00  lea     r12,[nt!ExNPagedLookasideLock (fffff802`78c48550)]
fffff802`7887748f 488d3dca103d00  lea     rdi,[nt!ExNPagedLookasideListHead (fffff802`78c48560)]
; taken
; r12 -> ExPagedLookasideLock
; idk cmovne is not executed in windbg, ZF not set, so you should be executed, right? idk
fffff802`78877496 4c0f45e1        cmovne  r12,rcx
; ZF set
fffff802`7887749a 85c0            test    eax,eax
; rcx -> listhead function addr
fffff802`7887749c 488d0ddd103d00  lea     rcx,[nt!ExPagedLookasideListHead (fffff802`78c48580)]
; not taken
; rdi -> ExNPagedLookasideListHead func addr
fffff802`788774a3 480f45f9        cmovne  rdi,rcx
fffff802`788774a7 488bcb          mov     rcx,rbx
fffff802`788774aa e811010000      call    nt!InitializeSListHead (fffff802`788775c0)
; `nt!ExMinimumLookasideDepth` -> 0
; eax -> 0
fffff802`788774af 0fb705facc3c00  movzx   eax,word ptr [nt!ExMinimumLookasideDepth (fffff802`78c441b0)]
; rcx reset
fffff802`788774b6 33c9            xor     ecx,ecx
; allocate buffer offset 0x10 -> 0
; looks like filling field of a structure in allocate buffer
; from 0x10 to 0x28
fffff802`788774b8 66894310        mov     word ptr [rbx+10h],ax
fffff802`788774bc 0bf5            or      esi,ebp
fffff802`788774be 8b842490000000  mov     eax,dword ptr [rsp+90h]
fffff802`788774c5 894328          mov     dword ptr [rbx+28h],eax
fffff802`788774c8 488b442420      mov     rax,qword ptr [rsp+20h]
fffff802`788774cd 89432c          mov     dword ptr [rbx+2Ch],eax
fffff802`788774d0 6644897b12      mov     word ptr [rbx+12h],r15w
fffff802`788774d5 48894b14        mov     qword ptr [rbx+14h],rcx
fffff802`788774d9 48894b1c        mov     qword ptr [rbx+1Ch],rcx
fffff802`788774dd 897324          mov     dword ptr [rbx+24h],esi
fffff802`788774e0 4d85ed          test    r13,r13
fffff802`788774e3 7507            jne     nt!ExInitializeLookasideListExInternal+0x12c (fffff802`788774ec)  Branch

nt!ExInitializeLookasideListExInternal+0x125:
; jmp here 
fffff802`788774e5 4c8d2d544c0300  lea     r13,[nt!CmpAllocatePoolWithTag (fffff802`788ac140)]

nt!ExInitializeLookasideListExInternal+0x12c:
fffff802`788774ec 4c896b30        mov     qword ptr [rbx+30h],r13
fffff802`788774f0 488d05c9690c00  lea     rax,[nt!ExFreePoolEx (fffff802`7893dec0)]
; ZF not set
fffff802`788774f7 4d85f6          test    r14,r14
; not taken
fffff802`788774fa 4c0f44f0        cmove   r14,rax
; store it
fffff802`788774fe 4c897338        mov     qword ptr [rbx+38h],r14
fffff802`78877502 48894b50        mov     qword ptr [rbx+50h],rcx
fffff802`78877506 498bcc          mov     rcx,r12
fffff802`78877509 e8222f0400      call    nt!KeAcquireSpinLockRaiseToDpc (fffff802`788ba430)
fffff802`7887750e 33ed            xor     ebp,ebp
fffff802`78877510 408af0          mov     sil,al
fffff802`78877513 39ac24a0000000  cmp     dword ptr [rsp+0A0h],ebp
fffff802`7887751a 0f8530541a00    jne     nt!ExInitializeLookasideListExInternal+0x1a5590 (fffff802`78a1c950)  Branch

nt!ExInitializeLookasideListExInternal+0x160:
; `nt!ExMinimumLookasideDepth` -> 0x4
fffff802`78877520 0fb70589cc3c00  movzx   eax,word ptr [nt!ExMinimumLookasideDepth (fffff802`78c441b0)]
; je will not be taken
fffff802`78877527 6685c0          test    ax,ax
fffff802`7887752a 0f8433541a00    je      nt!ExInitializeLookasideListExInternal+0x1a55a3 (fffff802`78a1c963)  Branch

nt!ExInitializeLookasideListExInternal+0x170:
fffff802`78877530 488b4708        mov     rax,qword ptr [rdi+8]
fffff802`78877534 4883c340        add     rbx,40h
fffff802`78877538 483938          cmp     qword ptr [rax],rdi
; not taken
fffff802`7887753b 0f852e541a00    jne     nt!ExInitializeLookasideListExInternal+0x1a55af (fffff802`78a1c96f)  Branch

nt!ExInitializeLookasideListExInternal+0x181:
fffff802`78877541 48893b          mov     qword ptr [rbx],rdi
fffff802`78877544 498bcc          mov     rcx,r12
fffff802`78877547 48894308        mov     qword ptr [rbx+8],rax
fffff802`7887754b 488918          mov     qword ptr [rax],rbx
fffff802`7887754e 48895f08        mov     qword ptr [rdi+8],rbx
fffff802`78877552 e8b988fcff      call    nt!KeReleaseSpinLockFromDpcLevel (fffff802`7883fe10)
fffff802`78877557 8b054b405100    mov     eax,dword ptr [nt!KiIrqlFlags (fffff802`78d8b5a8)]
fffff802`7887755d 85c0            test    eax,eax
fffff802`7887755f 0f8511541a00    jne     nt!ExInitializeLookasideListExInternal+0x1a55b6 (fffff802`78a1c976)  Branch

nt!ExInitializeLookasideListExInternal+0x1a5:
fffff802`78877565 400fb6c6        movzx   eax,sil
fffff802`78877569 440f22c0        mov     cr8,rax
fffff802`7887756d 33c0            xor     eax,eax

nt!ExInitializeLookasideListExInternal+0x1af:
fffff802`7887756f 488b5c2460      mov     rbx,qword ptr [rsp+60h]
fffff802`78877574 488b6c2468      mov     rbp,qword ptr [rsp+68h]
fffff802`78877579 488b742470      mov     rsi,qword ptr [rsp+70h]
fffff802`7887757e 4883c430        add     rsp,30h
fffff802`78877582 415f            pop     r15
fffff802`78877584 415e            pop     r14
fffff802`78877586 415d            pop     r13
fffff802`78877588 415c            pop     r12
fffff802`7887758a 5f              pop     rdi
; what the fuck??? you just returned? when would you call allocate
fffff802`7887758b c3              ret

nt!ExInitializeLookasideListExInternal+0x1cc:
fffff802`7887758c 41b800010000    mov     r8d,100h
fffff802`78877592 0fb7c1          movzx   eax,cx
fffff802`78877595 66412bc0        sub     ax,r8w
fffff802`78877599 41b800030000    mov     r8d,300h
fffff802`7887759f 66413bc0        cmp     ax,r8w
fffff802`788775a3 0f865ffeffff    jbe     nt!ExInitializeLookasideListExInternal+0x48 (fffff802`78877408)  Branch

nt!ExInitializeLookasideListExInternal+0x1e9:
fffff802`788775a9 b8f60000c0      mov     eax,0C00000F6h
fffff802`788775ae ebbf            jmp     nt!ExInitializeLookasideListExInternal+0x1af (fffff802`7887756f)  Branch

nt!ExInitializeLookasideListExInternal+0x1a5586:
fffff802`78a1c946 be10000000      mov     esi,10h
fffff802`78a1c94b e913abe5ff      jmp     nt!ExInitializeLookasideListExInternal+0xa3 (fffff802`78877463)  Branch

nt!ExInitializeLookasideListExInternal+0x1a5590:
fffff802`78a1c950 b9ffff0000      mov     ecx,0FFFFh
fffff802`78a1c955 6644897b10      mov     word ptr [rbx+10h],r15w
fffff802`78a1c95a 66894b12        mov     word ptr [rbx+12h],cx
fffff802`78a1c95e e9cdabe5ff      jmp     nt!ExInitializeLookasideListExInternal+0x170 (fffff802`78877530)  Branch

nt!ExInitializeLookasideListExInternal+0x1a55a3:
fffff802`78a1c963 c743100000ffff  mov     dword ptr [rbx+10h],0FFFF0000h
fffff802`78a1c96a e9c1abe5ff      jmp     nt!ExInitializeLookasideListExInternal+0x170 (fffff802`78877530)  Branch

nt!ExInitializeLookasideListExInternal+0x1a55af:
fffff802`78a1c96f b903000000      mov     ecx,3
fffff802`78a1c974 cd29            int     29h

nt!ExInitializeLookasideListExInternal+0x1a55b6:
fffff802`78a1c976 a801            test    al,1
fffff802`78a1c978 0f84e7abe5ff    je      nt!ExInitializeLookasideListExInternal+0x1a5 (fffff802`78877565)  Branch

nt!ExInitializeLookasideListExInternal+0x1a55be:
fffff802`78a1c97e 440f20c0        mov     rax,cr8
fffff802`78a1c982 3c02            cmp     al,2
fffff802`78a1c984 0f82dbabe5ff    jb      nt!ExInitializeLookasideListExInternal+0x1a5 (fffff802`78877565)  Branch

nt!ExInitializeLookasideListExInternal+0x1a55ca:
fffff802`78a1c98a 4080fe02        cmp     sil,2
fffff802`78a1c98e 0f83d1abe5ff    jae     nt!ExInitializeLookasideListExInternal+0x1a5 (fffff802`78877565)  Branch

nt!ExInitializeLookasideListExInternal+0x1a55d4:
fffff802`78a1c994 65488b0c2520000000 mov   rcx,qword ptr gs:[20h]
fffff802`78a1c99d 488b81b8610000  mov     rax,qword ptr [rcx+61B8h]
fffff802`78a1c9a4 f08120fffffeff  lock and dword ptr [rax],0FFFEFFFFh
fffff802`78a1c9ab e8b877fbff      call    nt!KiRemoveSystemWorkPriorityKick (fffff802`789d4168)
fffff802`78a1c9b0 90              nop
fffff802`78a1c9b1 e9afabe5ff      jmp     nt!ExInitializeLookasideListExInternal+0x1a5 (fffff802`78877565)  Branch

nt!ExInitializeLookasideListExInternal+0x1a55f6:
fffff802`78a1c9b6 b8f20000c0      mov     eax,0C00000F2h
fffff802`78a1c9bb e9afabe5ff      jmp     nt!ExInitializeLookasideListExInternal+0x1af (fffff802`7887756f)  Branch

nt!ExInitializeLookasideListExInternal+0x1a5600:
fffff802`78a1c9c0 b8f30000c0      mov     eax,0C00000F3h
fffff802`78a1c9c5 e9a5abe5ff      jmp     nt!ExInitializeLookasideListExInternal+0x1af (fffff802`7887756f)  Branch
