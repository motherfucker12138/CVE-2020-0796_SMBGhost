srvnet!PplCreateLookasideList:
; register save operation, 7 push, 0x38bytes stack consumed, plus ret addr -> 0x40
fffff802`7db8ce0c 48895c2418      mov     qword ptr [rsp+18h],rbx
fffff802`7db8ce11 4889542410      mov     qword ptr [rsp+10h],rdx
fffff802`7db8ce16 48894c2408      mov     qword ptr [rsp+8],rcx
fffff802`7db8ce1b 55              push    rbp
fffff802`7db8ce1c 56              push    rsi
fffff802`7db8ce1d 57              push    rdi
fffff802`7db8ce1e 4154            push    r12
fffff802`7db8ce20 4155            push    r13
fffff802`7db8ce22 4156            push    r14
fffff802`7db8ce24 4157            push    r15
; give me some space(0x50bytes) in the stack!
fffff802`7db8ce26 4883ec50        sub     rsp,50h
; [rsp+0C8h] here is the same as 0xC8 - 0x50 - 0x40 -> rsp+0x38 in caller
; `mov     dword ptr [rsp+38h],6662534Ch`
; so esi init to 0x6662534C
fffff802`7db8ce2a 8bb424c8000000  mov     esi,dword ptr [rsp+0C8h]
; init r9 to 0
fffff802`7db8ce31 4533c9          xor     r9d,r9d
; init ebp to 0x204
fffff802`7db8ce34 bd04020000      mov     ebp,204h
; init r8 to 0x6662534C
fffff802`7db8ce39 448bc6          mov     r8d,esi
; init ecx to 0x204
fffff802`7db8ce3c 8bcd            mov     ecx,ebp
; init ebx to 0x40
fffff802`7db8ce3e 418d5940        lea     ebx,[r9+40h]
; init edx to 0x40
fffff802`7db8ce42 8bd3            mov     edx,ebx
fffff802`7db8ce44 4c8b152d560200  mov     r10,qword ptr [srvnet!_imp_ExAllocatePoolWithTagPriority (fffff802`7dbb2478)]
; fuck, another function is call here
; omit it for now
fffff802`7db8ce4b e840d7cbfa      call    nt!ExAllocatePoolWithTagPriority (fffff802`7884a590)
; return value is an addr, je not taken
fffff802`7db8ce50 488bf8          mov     rdi,rax
fffff802`7db8ce53 4885c0          test    rax,rax
fffff802`7db8ce56 0f8431010000    je      srvnet!PplCreateLookasideList+0x181 (fffff802`7db8cf8d)  Branch

srvnet!PplCreateLookasideList+0x50:
; r8d -> 0x40
fffff802`7db8ce5c 448bc3          mov     r8d,ebx
; init edx to 0
fffff802`7db8ce5f 33d2            xor     edx,edx
; transfer the returned addr to rcx
fffff802`7db8ce61 488bc8          mov     rcx,rax
; call memset to init returned addr to 0, size is 0x40
; so fucntion `nt!ExAllocatePoolWithTagPriority`'s third param(rdx) should be allocate buffer size
fffff802`7db8ce64 e817500000      call    srvnet!memset (fffff802`7db91e80)
; r15 -> 0xFFFF
fffff802`7db8ce69 41bfffff0000    mov     r15d,0FFFFh
; ecx -> 0xFFFF
fffff802`7db8ce6f 418bcf          mov     ecx,r15d
fffff802`7db8ce72 4c8b1547560200  mov     r10,qword ptr [srvnet!_imp_KeQueryMaximumProcessorCountEx (fffff802`7dbb24c0)]
; omit this function for now, this function will change rax to a very small number
; through windbg, seems like this function always returns 0x2
fffff802`7db8ce79 e8d22dd3fa      call    nt!KeQueryMaximumProcessorCountEx (fffff802`788bfc50)
; reset r9 to 0
fffff802`7db8ce7e 4533c9          xor     r9d,r9d
; r8 -> 0x6662534C
fffff802`7db8ce81 448bc6          mov     r8d,esi
; ecx -> 0x204
fffff802`7db8ce84 8bcd            mov     ecx,ebp
; ebx -> `srvnet!_imp_KeQueryMaximumProcessorCountEx` return value + 1
; idk what does it mean
fffff802`7db8ce86 8d5801          lea     ebx,[rax+1]
; shift left 3 bit
fffff802`7db8ce89 48c1e303        shl     rbx,3
; transfer rbx to rdx
fffff802`7db8ce8d 488bd3          mov     rdx,rbx
fffff802`7db8ce90 4c8b15e1550200  mov     r10,qword ptr [srvnet!_imp_ExAllocatePoolWithTagPriority (fffff802`7dbb2478)]
; this function is called again
fffff802`7db8ce97 e8f4d6cbfa      call    nt!ExAllocatePoolWithTagPriority (fffff802`7884a590)
fffff802`7db8ce9c 4c8bf0          mov     r14,rax
fffff802`7db8ce9f 4885c0          test    rax,rax
fffff802`7db8cea2 0f8453a20000    je      srvnet!PplCreateLookasideList+0xa2ef (fffff802`7db970fb)  Branch

srvnet!PplCreateLookasideList+0x9c:
fffff802`7db8cea8 4c8bc3          mov     r8,rbx
fffff802`7db8ceab 48894720        mov     qword ptr [rdi+20h],rax
fffff802`7db8ceaf 33d2            xor     edx,edx
fffff802`7db8ceb1 488bc8          mov     rcx,rax
; almost the same as above, only the size is changed (because rbx is change, 
; fucntion ret value+1 and left shift 3 bit)
fffff802`7db8ceb4 e8c74f0000      call    srvnet!memset (fffff802`7db91e80)
fffff802`7db8ceb9 418bcf          mov     ecx,r15d
fffff802`7db8cebc 4c8b15e5590200  mov     r10,qword ptr [srvnet!_imp_KeQueryActiveProcessorCountEx (fffff802`7dbb28a8)]
fffff802`7db8cec3 e87837d3fa      call    nt!KeQueryActiveProcessorCountEx (fffff802`788c0640)
; [rsp+0B8h] here is the same as 0xB8 - 0x50 - 0x40 -> rsp+0x28 in caller
; `mov     dword ptr [rsp+28h],3030534Ch`
; so r12 -> 0x3030534C
fffff802`7db8cec8 448ba424b8000000 mov     r12d,dword ptr [rsp+0B8h]
; eax -> return value
; r15 -> count function return value
fffff802`7db8ced0 448bf8          mov     r15d,eax
; [rsp+0B0h] here is the same as 0xB0 - 0x50 - 0x40 -> rsp+0x20 in caller
; this value is calculated in caller
fffff802`7db8ced3 4c8bac24b0000000 mov     r13,qword ptr [rsp+0B0h]
; ebp and eax -> 0
fffff802`7db8cedb b800000000      mov     eax,0
fffff802`7db8cee0 8be8            mov     ebp,eax
; returned value + 1
; r15 -> 0x3
fffff802`7db8cee2 4183c701        add     r15d,1
; no cmp operation, idk why a `je` instructiom is here
; no jump is taken
fffff802`7db8cee6 7454            je      srvnet!PplCreateLookasideList+0x130 (fffff802`7db8cf3c)  Branch

srvnet!PplCreateLookasideList+0xdc:
; r14 is a buffer addr
fffff802`7db8cee8 498bde          mov     rbx,r14

srvnet!PplCreateLookasideList+0xdf:
fffff802`7db8ceeb 85ed            test    ebp,ebp
; je is taken
fffff802`7db8ceed 0f8480000000    je      srvnet!PplCreateLookasideList+0x167 (fffff802`7db8cf73)  Branch

srvnet!PplCreateLookasideList+0xe7:
fffff802`7db8cef3 88442448        mov     byte ptr [rsp+48h],al
fffff802`7db8cef7 488d1572060000  lea     rdx,[srvnet!PplGenericFreeFunction (fffff802`7db8d570)]
fffff802`7db8cefe 498b06          mov     rax,qword ptr [r14]
fffff802`7db8cf01 488d0dd8060000  lea     rcx,[srvnet!PplGenericAllocateFunction (fffff802`7db8d5e0)]

srvnet!PplCreateLookasideList+0xfc:
; jump to here
; passing parameters to function srvnet!PplpCreateOneLookasideList
; rax -> 0
; esi and r12d is constant
; r13 is something calculated in caller's loop
fffff802`7db8cf08 4889442440      mov     qword ptr [rsp+40h],rax
fffff802`7db8cf0d 89742438        mov     dword ptr [rsp+38h],esi
fffff802`7db8cf11 4489642428      mov     dword ptr [rsp+28h],r12d
fffff802`7db8cf16 4c896c2420      mov     qword ptr [rsp+20h],r13
; let's check this function out
; it may use rcx and rdx to call some functions
fffff802`7db8cf1b e878000000      call    srvnet!PplpCreateOneLookasideList (fffff802`7db8cf98)
; store return value in the memory pointed by rbx
fffff802`7db8cf20 488903          mov     qword ptr [rbx],rax
fffff802`7db8cf23 4885c0          test    rax,rax
fffff802`7db8cf26 0f8494a10000    je      srvnet!PplCreateLookasideList+0xa2b4 (fffff802`7db970c0)  Branch

srvnet!PplCreateLookasideList+0x120:
fffff802`7db8cf2c ffc5            inc     ebp
fffff802`7db8cf2e 4883c308        add     rbx,8
fffff802`7db8cf32 b800000000      mov     eax,0
fffff802`7db8cf37 413bef          cmp     ebp,r15d
fffff802`7db8cf3a 72af            jb      srvnet!PplCreateLookasideList+0xdf (fffff802`7db8ceeb)  Branch

srvnet!PplCreateLookasideList+0x130:
fffff802`7db8cf3c 894704          mov     dword ptr [rdi+4],eax
fffff802`7db8cf3f 6689471c        mov     word ptr [rdi+1Ch],ax
fffff802`7db8cf43 488bc7          mov     rax,rdi
fffff802`7db8cf46 44893f          mov     dword ptr [rdi],r15d
fffff802`7db8cf49 44896708        mov     dword ptr [rdi+8],r12d
fffff802`7db8cf4d 89770c          mov     dword ptr [rdi+0Ch],esi
fffff802`7db8cf50 4c896f10        mov     qword ptr [rdi+10h],r13
fffff802`7db8cf54 c7471800020000  mov     dword ptr [rdi+18h],200h

srvnet!PplCreateLookasideList+0x14f:
fffff802`7db8cf5b 488b9c24a0000000 mov     rbx,qword ptr [rsp+0A0h]
fffff802`7db8cf63 4883c450        add     rsp,50h
fffff802`7db8cf67 415f            pop     r15
fffff802`7db8cf69 415e            pop     r14
fffff802`7db8cf6b 415d            pop     r13
fffff802`7db8cf6d 415c            pop     r12
fffff802`7db8cf6f 5f              pop     rdi
fffff802`7db8cf70 5e              pop     rsi
fffff802`7db8cf71 5d              pop     rbp
fffff802`7db8cf72 c3              ret

srvnet!PplCreateLookasideList+0x167:
; je takes us here
; restore register value, you'll see if you check the first few lines in this function
fffff802`7db8cf73 488b942498000000 mov     rdx,qword ptr [rsp+98h]
fffff802`7db8cf7b 488b8c2490000000 mov     rcx,qword ptr [rsp+90h]
fffff802`7db8cf83 c644244801      mov     byte ptr [rsp+48h],1
fffff802`7db8cf88 e97bffffff      jmp     srvnet!PplCreateLookasideList+0xfc (fffff802`7db8cf08)  Branch

srvnet!PplCreateLookasideList+0x181:
fffff802`7db8cf8d 33c0            xor     eax,eax
fffff802`7db8cf8f ebca            jmp     srvnet!PplCreateLookasideList+0x14f (fffff802`7db8cf5b)  Branch

srvnet!PplCreateLookasideList+0xa2b4:
fffff802`7db970c0 41bf01000000    mov     r15d,1
fffff802`7db970c6 413bef          cmp     ebp,r15d
fffff802`7db970c9 721f            jb      srvnet!PplCreateLookasideList+0xa2de (fffff802`7db970ea)  Branch

srvnet!PplCreateLookasideList+0xa2bf:
fffff802`7db970cb 8bc5            mov     eax,ebp
fffff802`7db970cd 8bd6            mov     edx,esi
fffff802`7db970cf 412bc7          sub     eax,r15d
fffff802`7db970d2 8bd8            mov     ebx,eax
fffff802`7db970d4 498b0cc6        mov     rcx,qword ptr [r14+rax*8]
fffff802`7db970d8 e897d00000      call    srvnet!PplpFreeOneLookasideList (fffff802`7dba4174)
fffff802`7db970dd 498324de00      and     qword ptr [r14+rbx*8],0
fffff802`7db970e2 41ffc7          inc     r15d
fffff802`7db970e5 443bfd          cmp     r15d,ebp
fffff802`7db970e8 76e1            jbe     srvnet!PplCreateLookasideList+0xa2bf (fffff802`7db970cb)  Branch

srvnet!PplCreateLookasideList+0xa2de:
fffff802`7db970ea 8bd6            mov     edx,esi
fffff802`7db970ec 498bce          mov     rcx,r14
fffff802`7db970ef 4c8b15dab70100  mov     r10,qword ptr [srvnet!_imp_ExFreePoolWithTag (fffff802`7dbb28d0)]
fffff802`7db970f6 e8a5effefa      call    nt!ExFreePool (fffff802`78b860a0)

srvnet!PplCreateLookasideList+0xa2ef:
fffff802`7db970fb 8bd6            mov     edx,esi
fffff802`7db970fd 488bcf          mov     rcx,rdi
fffff802`7db97100 4c8b15c9b70100  mov     r10,qword ptr [srvnet!_imp_ExFreePoolWithTag (fffff802`7dbb28d0)]
fffff802`7db97107 e894effefa      call    nt!ExFreePool (fffff802`78b860a0)
fffff802`7db9710c 90              nop
fffff802`7db9710d e97b5effff      jmp     srvnet!PplCreateLookasideList+0x181 (fffff802`7db8cf8d)  Branch
